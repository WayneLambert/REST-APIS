name: Run Django Tests

on:
  push:
    branches:
      - master

jobs:
  test:
    name: Run Django Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.9
        env:
          POSTGRES_ENGINE: 'django.db.backends.postgresql_psycopg2'
          POSTGRES_DB: portfolio_db
          POSTGRES_USER: wayne_lambert
          POSTGRES_PASSWORD: catgftitw
          POSTGRES_PORT: 5432
        options:
          --mount type=tmpfs,destination=/var/lib/postgresql/data/
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          ref: "refs/heads/master"

      - name: Debug Script
        uses: hmarr/debug-action@v1.0.0

      - name: Set up Python 3.8.5
        uses: actions/setup-python@v1
        with:
          python-version: 3.8.5

      - name: Add Environment Variables to .env File
        run: |
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo DJANGO_ADMIN_LOGIN_PATH=${{ secrets.DJANGO_ADMIN_LOGIN_PATH }} >> .env
          echo SES_ACCESS_KEY=${{ secrets.SES_ACCESS_KEY }} >> .env
          echo SES_SECRET_KEY=${{ secrets.SES_SECRET_KEY }} >> .env
          echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env
          echo AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }} >> .env
          echo AWS_BASE_BUCKET_ADDRESS=${{ secrets.AWS_BASE_BUCKET_ADDRESS }} >> .env
          echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET }} >> .env
          echo RECAPTCHA_PUBLIC_KEY=${{ secrets.RECAPTCHA_PUBLIC_KEY }} >> .env
          echo RECAPTCHA_PRIVATE_KEY=${{ secrets.RECAPTCHA_PRIVATE_KEY }} >> .env
          echo PYTEST_TEST_PASSWORD=${{ secrets.PYTEST_TEST_PASSWORD }} >> .env
          echo EMAIL_HOST_SES=${{ secrets.EMAIL_HOST_SES }} >> .env
          echo EMAIL_HOST_USER_SES=${{ secrets.EMAIL_HOST_USER_SES }} >> .env
          echo EMAIL_HOST_PASSWORD_SES=${{ secrets.EMAIL_HOST_PASSWORD_SES }} >> .env
          echo DEFAULT_FROM_EMAIL_SES=${{ secrets.DEFAULT_FROM_EMAIL_SES }} >> .env
          echo OD_API_BASE_URL=${{ secrets.OD_API_BASE_URL }} >> .env
          echo OD_APPLICATION_ID=${{ secrets.OD_APPLICATION_ID }} >> .env
          echo OD_APPLICATION_KEY_1=${{ secrets.OD_APPLICATION_KEY_1 }} >> .env

      - name: Add Environment Variables to dev.env File
        run: |
          echo DJANGO_SETTINGS_MODULE=${{ secrets.DJANGO_SETTINGS_MODULE }} >> dev.env

      - name: Set Environment Variables for .env File
        run: for var in `cat .env` ; do echo "::set-env name=${var%%=*}::${var##*=}" ; done

      - name: Set Environment Variables for dev.env File
        run: for var in `cat dev.env` ; do echo "::set-env name=${var%%=*}::${var##*=}" ; done

      - name: Install pipenv
        run: python -m pip install pipenv
      
      - name: Install dependencies
        run: pipenv install --ignore-pipfile --deploy --system --dev

      - name: Run tests
        run: pytest --runslow --cache-clear --durations 20 --cov=./ --cov-report=xml
        env:
          SYSTEM_ENV: GITHUB_WORKFLOW

      - name: Upload Coverage Report to Codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
