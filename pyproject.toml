# -- POETRY CONFIG ----------------------------------------------------------------------

[tool.poetry]
name = "portfolio"
version = "1.0.0"
description = "Portfolio"
authors = ["Wayne Lambert <wayne.a.lambert@gmail.com>"]

[tool.poetry.dependencies]
python = "==3.11.6"
django = "4.2.8"
djangorestframework = "==3.14.0"
django-crispy-forms = "^2.1"
django-recaptcha = "^4.0.0"
django-widget-tweaks = "1.5.0"
django-shapeshifter = "==18.9.23"
django-guardian = "==2.4.0"
django-axes = "==5.40.1"
django-storages = "1.14.2"
django-ses = "3.5.2"
django-filter = "23.5"
django-tinymce = "3.6.1"
django-bootstrap4 = "23.2"
django-two-factor-auth = "==1.14.0"
psycopg2-binary = "2.9.9"
gunicorn = "^21.2.0"
whitenoise = "6.6.0"
requests = "2.31.0"
beautifulsoup4 = "4.12.2"
markdown = "^3.5.1"
boto3 = "^1.33.11"
pygments = "2.17.2"
pillow = "^10.1.0"
phonenumbers = "8.13.26"
django-encrypted-model-fields = "0.6.5"
dj-database-url = "^2.1.0"
rich = "13.7.0"
crispy-bootstrap4 = "^2023.1"

[tool.poetry.group.dev.dependencies]
django-debug-toolbar = "4.2.0"
django-extensions = "3.2.3"
pytest = "7.4.3"
coverage = "^7.3.2"
pytest-django = "4.7.0"
pytest-cov = "4.1.0"
pytest-factoryboy = "2.6.0"
mixer = "7.2.2"
hypothesis = "6.92.0"
ptvsd = "==4.3.2"
bandit = "1.7.6"
wily = "1.25.0"
bpython = "0.24"
ipdb = "0.13.13"
pytest-randomly = "3.15.0"
pytest-vcr = "==1.0.2"
pytest-mock = "3.12.0"
pytest-xdist = "3.5.0"
ruff = "^0.1.7"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


# -- RUFF CONFIG ------------------------------------------------------------------------

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

extend-include = ["*.ipynb"]

# Same as Black.
line-length = 99
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


# -- ISORT CONFIG -----------------------------------------------------------------------

[tool.isort]
atomic = true
line_length = 99
profile = "black"
include_trailing_comma = true
force_single_line = false
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
skip_glob = "*/.venv/*, */node_modules/*, */.git/*, */migrations/*"

sections = [
  "FUTURE",
  "STDLIB",
  "DJANGO",
  "THIRDPARTY",
  "FIRSTPARTY",
  "LOCALFOLDER",
]

known_django = "django"
known_third_party = [
  "PIL",
  "bs4",
  "captcha",
  "dj_database_url",
  "factory",
  "hypothesis",
  "mixer",
  "pytest",
  "requests",
  "rest_framework",
  "shapeshifter",
  "tinymce",
]

# -- PYTEST CONFIG ----------------------------------------------------------------------
[tool.pytest.ini_options]
minversion = "6.0"
django_find_project = true
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

addopts = [
  "--ds=aa_project.settings.pytest.pytest",
  "--reuse-db",
  "--nomigrations",
  "--fail-on-template-vars",
  "--doctest-modules",
  "--showlocals",
  "--strict-markers",
  "--ignore=.venv",
  "--cov=.",
  "--cov-report=html",
  "--randomly-dont-reorganize",
  "--numprocesses=auto",

  # Uses iPDB for `--trace` debugging
  "--pdbcls=IPython.terminal.debugger:TerminalPdb",
]

norecursedirs = [
  ".* build",
  "dist",
  "*.egg",
  "node_modules",
  "media",
  ".venv",
  "scss",
  "docs",
  ".git",
  "static",
  "staticfiles",
  "docker",
  "htmlcov",
]

testpaths = [
  "aa_project/tests",
  "apps/api/tests",
  "apps/blog/tests",
  "apps/contacts/tests",
  "apps/countdown_letters/tests",
  "apps/countdown_numbers/tests",
  "apps/cv/tests",
  "apps/pages/tests",
  "apps/roulette/tests",
  "apps/scraping/tests",
  "apps/text_analysis/tests",
  "apps/users/tests",
]

filterwarnings = ["ignore::django.utils.deprecation.RemovedInDjango50Warning"]

# Command Line Options
console_output_style = "progress"
log_cli = true
log_cli_level = "WARNING"
log_cli_format = "%(asctime)s %(levelname)s %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

# Log Options
log_level = "INFO"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_format = "%(asctime)s %(levelname)s %(message)s"

# Log File Options
log_file = "logs/pytest/pytest_logs.log"
log_file_level = "DEBUG"
log_file_format = "%(asctime)s %(levelname)s %(message)s"
log_file_date_format = "%Y-%m-%d %H:%M:%S"

# -- COVERAGE CONFIG --------------------------------------------------------------------

[tool.coverage]
[tool.coverage.run]
branch = true
parallel = true
source = ["."]
omit = [
  ".hypothesis/*",
  ".pytest_cache/*",
  ".venv/*",
  "*__init__.py",
  "*__pycache__",
  "*/aa_project/settings/dev.py",
  "*/aa_project/settings/pytest/pytest.py",
  "*/distutils/*",
  "*/node_modules/*",
  "*/site-packages/*",
  "*/static/*",
  "*/staticfiles/*",
  "*/tests/test*.py",
  "*/users/signals.py",
  "*admin.py*",
  "*apps.py",
  "*asgi.py",
  "*conftest.py",
  "*feeds.py",
  "*migrations/*",
  "*sitemap.py",
  "*wsgi.py",
  "manage.py",
]

[tool.coverage.report]
# fail_under = 95
skip_covered = false
show_missing = true
precision = 2
exclude_lines = [
  "def __repr__",
  "def __str__",
  "if __name__ == .__main__.:",
  "if 0:",
  "if DEBUG:",
  "if not DEBUG:",
  "if self.debug:",
  "if settings.DEBUG:",
  "pragma: no cover",
  "raise AssertionError",
  "raise NotImplementedError",
]
omit = ["venv/*", "tests/*", "setup.py", "*/__main__.py"]

# -- BANDIT CONFIG --------------------------------------------------------------------

[tool.bandit]
targets = ["/code/"]
exclude = [
  ".venv/*",
  "*apps.py",
  "*/migrations/*",
  "test_*.py",
  "*/node_modules/*",
  "./cacheback/*",
  "*/static/*",
  "*/staticfiles/*",
  "*/tests/test*.py",
  ".pytest_cache/*",
  ".hypothesis/*",
  "*wsgi.py",
  "*asgi.py",
  "manage.py",
  "*__init__.py",
  "*__pycache__",
  "*/site-packages/*",
  "*/distutils/*",
  "*/.git/*",
  ".github/*",
  "*/scss/*",
  "*/htmlcov/*",
  "*/logs/*",
  "*/media/*",
]
