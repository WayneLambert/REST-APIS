version: '3.7'

services:
  postgres:
    container_name: portfolio_postgres 
    build:
      context: ./docker/postgres
    restart: always
    volumes:
      - type: volume
        source: postgres_vol
        target: /var/lib/postgresql/data
    ports:
      - 5432:5432
    networks: 
      - backend

  pg-admin:
    container_name: portfolio_pg_admin4
    build:
      context: ./docker/pg-admin
    restart: on-failure
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres
    ports:
      - 8080:80
    networks:
      - backend

  web:
    container_name: portfolio_web
    build:
      dockerfile: ./docker/web/Dockerfile
      context: .
    depends_on:
      - postgres
      - pg-admin
    restart: always
    env_file:
      - .env
    volumes:
      - type: volume
        source: web_vol
        target: ${WEB_CONTAINER_PATH}
        consistency: consistent
      - type: volume
        source: web_vol_static
        target: ${WEB_CONTAINER_STATIC_PATH}
        consistency: static
    ports:
      - 8001:8001
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_vol:
  web_vol:
    driver: local
    driver_opts:
      type: none
      device: $PWD/${WEB_HOST_PATH}
      o: bind
  web_vol_static:
    driver: local
    driver_opts:
      type: none
      device: $PWD/${WEB_HOST_STATIC_PATH}
      o: bind