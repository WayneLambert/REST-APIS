[tool.pylint.master]
jobs="0"    # Auto-detect the number of processors
fail-under="10"
ignore-patterns='''
  \.eggs
  |\.git
  |\.hg
  |\.mypy_cache
  |\.tox
  |\.venv
  |_build
  |buck-out
  |build
  |dist
  |conf.py
'''
persistent="no"
load-plugins= ["pylint_django, pytest_pylint"]
limit-inference-results="100"
suggestion-mode="yes"
unsafe-load-any-extension="no"
extension-pkg-whitelist=""
exit-zero="no"
from-stdin="no"

[tool.pylint.message_control]
enable = [
  'F',  # Fatal
  'E',  # Error
  'W',  # Warning
  'R',  # Refactor
  'C',  # Convention
  'I',  # Informational
]
disable = """,
  line-too-long,
  missing-module-docstring,
  missing-class-docstring,
  missing-function-docstring,
  attribute-defined-outside-init,
  no-self-use,
"""

[tool.pylint.reports]
reports = "no"
msg-template = "{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}"
output-format = "colorized"
score = "no"

[tool.pylint.format]
max-line-length = "99"

[tool.pylint.basic]
good-names = "_, qs, pk"

[tool.pylint.miscellaneous]
notes="TODO, FIXME, DEBUG"

[tool.black]
line-length = 99
skip-string-normalization = true
diff = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''


[tool.isort]
atomic = true
line_length = 89
include_trailing_comma = true
force_single_line = false
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
skip_glob = "*/.venv/*, */node_modules/*, */.tox/*, */.git/*, */migrations/*"
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_django = "django"
known_third_party = ["PIL", "bs4", "captcha", "dj_database_url", "django", "factory", "hypothesis", "mixer", "pytest", "requests", "rest_framework", "shapeshifter", "tinymce"]
